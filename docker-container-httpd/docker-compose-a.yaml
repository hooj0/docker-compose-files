version: "2"

services:  

  manager:
    #image: busybox 
    image: masget/fabric-chaincode-deploy:0.2
    container_name: fabric-chaincode-deploy
    hostname: chaincode-manager
    environment:      
      # 请求主机IP地址
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_NETWORK_HOST=192.168.33.73
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_NETWORK_HOST=127.0.0.1
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_NETWORK_HOST=localhost
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_NETWORK_HOST=masterhost

      # 以下方式测试不行
      # bridge 网络模式的 docker 守护进程网络IP
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_NETWORK_HOST=172.17.0.1
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_NETWORK_HOST=172.18.0.1
      # windows & mac
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_NETWORK_HOST=host.docker.internal

      # 配置文件
      #- HYPERLEDGER_FABRIC_SDK_COMMONS_CONFIG=fabric-chaincode.produce.properties
      - HYPERLEDGER_FABRIC_SDK_COMMONS_CONFIG=/var/fabric/config/fabric-chaincode.produce-safe.properties
      - HYPERLEDGER_FABRIC_SDK_KV_STORE_CONFIG=/var/fabric/config/fabric-kv-store.properties
    
    #command: /bin/sh -c "echo hello;"
    stdin_open: true
    tty: true
    #stop_grace_period: 1m30s
    
    volumes:
      - /var/log4j:/var/log4j
      - /var/fabric/config:/var/fabric/config
      - /opt/gopath/src/github.com/hyperledger/fabric/network_resources/dev/basic:/network_resources/dev/basic

    #links:
    #  - redis:cacheredis

    # 链接外部网络，相当于取别名
    external_links:
      - "ca-peerOrg1-net:ca-peerOrg1"
      - "ca-peerOrg2-net:ca-peerOrg2"
    #  - orderer.example.com:orderer.example.com
    #  - peer0.org1.example.com:peer0.org1.example.com
    #  - peer0.org2.example.com:peer0.org2.example.com
    #  - peer1.org1.example.com:peer1.org1.example.com
    #  - peer1.org2.example.com:peer1.org2.example.com
    #  - configtxlator:configtxlator
    #  - config.tx.lator:lator
    
    # 使用外部网络
    networks:
      - blockchain_net

    # 添加 host 映射配置
    #extra_hosts:
    #  - "masterhost:192.168.33.73"

    # 可以访问宿主主机中能访问的网络
    #network_mode: "host"

    # 主机和容器共享访问，让外部网络访问容器
    #pid: "host"

networks:
  blockchain_net:
    external:
      name: fabric_blockchain_net